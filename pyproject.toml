[tool.poetry]
name = "validated-llm"
version = "0.1.5"
description = "LLM output validation with retry loops - ensure your language model responses meet requirements"
authors = ["Your Name <your.email@example.com>"]
readme = "README.md"
packages = [{include = "validated_llm", from = "src"}]
keywords = ["llm", "validation", "ai", "language-model", "retry-loop", "openai"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

[tool.poetry.dependencies]
python = "^3.11"
openai = "^1.0.0"
pydantic = "^2.0.0"
pyyaml = "^6.0"
typing-extensions = "^4.0.0"
jsonschema = "^4.0.0"
chatbot = { path = "/Users/a/data/projects/1-ai/chatbot", develop = true }

[tool.poetry.group.dev.dependencies]
pytest = "*"
pytest-cov = "^4.0.0"
black = "^23.0.0"
isort = "^5.0.0"
mypy = "^1.0.0"
flake8 = "^6.0.0"
pre-commit = "^3.0.0"
types-jsonschema = "*"
types-PyYAML = "*"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 222
target-version = ['py39']

[tool.isort]
profile = "black"
line_length = 222

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = ["chatbot.chatbot", "pytest", "jsonschema"]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "validated_llm.tasks.story_to_scenes"
disable_error_code = ["unreachable"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "integration: marks tests as integration tests"
]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
]

[tool.coverage.run]
source = ["src"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
